---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.14.5
            env:
              PAPERLESS_ALLOWED_HOSTS: paperless.${SECRET_DOMAIN}
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_CONSUMPTION_DIR: /library/consume
              PAPERLESS_DATA_DIR: /library/data
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_EXPORT_DIR: /library/export
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_REMOTE_USER
              PAPERLESS_MEDIA_ROOT: /library/media
              PAPERLESS_OCR_LANGUAGE: eng
              PAPERLESS_PORT: &port 80
              PAPERLESS_REDIS: redis://:${REDIS_PASSWORD}@dragonfly.database.svc.cluster.local:6379
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_TIME_ZONE: Australia/Sydney
              PAPERLESS_TRUSTED_PROXIES: 10.42.0.0/16,192.168.8.0/24
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
              USERMAP_UID: 568
              USERMAP_GID: 568
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
    service:
      app:
        controller: paperless
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: paperless
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.ktmb1.net
        className: internal
        hosts:
          - host: paperless.ktmb1.net
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    serviceAccount:
      create: true
      name: paperless
    persistence:
      library:
        enabled: true
        existingClaim: paperless-nfs
        globalMounts:
          - path: /library
    resources:
      requests:
        cpu: 100m
        memory: 1000Mi
      limits:
        memory: 5000Mi
    sidecars:
      gotenburg:
        image: thecodingmachine/gotenberg:7.10.2
        imagePullPolicy: IfNotPresent
        env:
          - { name: DISABLE_GOOGLE_CHROME, value: "1" }
      redis:
        image: public.ecr.aws/docker/library/redis:7.4.2
        imagePullPolicy: IfNotPresent
      tika:
        image: ghcr.io/paperless-ngx/tika:2.9.1-full
        imagePullPolicy: IfNotPresent
